Q2) You are tasked with developing a C program for symbolic polynomial manipulation, which allows users to perform various operations on polynomials represented as linked lists. Your program should support addition, subtraction, multiplication, and symbolic
differentiation of polynomials. 1. Implement a data structure for representing polynomials using a linked list. Each node
in the list should store a coefficient and an exponent. Ensure that your implementation
can handle both positive and negative exponents. 2. Create functions to perform the following operations on polynomials:
o Addition: Add two polynomials together and return the result as a new
polynomial. o Subtraction: Subtract one polynomial from another and return the result as a
new polynomial. o Multiplication: Multiply two polynomials and return the result as a new
polynomial. o Symbolic Differentiation: Compute the derivative of a given polynomial and
return the result as a new polynomial. 3. Implement a function to simplify polynomials by combining like terms. For example, if the result of a polynomial addition contains terms with the same exponent, these
terms should be combined. 4. Develop a user interface that allows users to input two polynomials and choose an
operation (addition, subtraction, multiplication, or differentiation). Display the
simplified result of the chosen operation. 5. Optimize your program to handle large polynomials efficiently. Consider using data
structures like trees or hash tables for faster polynomial manipulation.